import { useState, useEffect, createContext, useContext } from 'react'
import { useNavigate } from 'react-router-dom'
import { MessageCircle, ChevronDown } from 'lucide-react'

// Create Language Context
const LanguageContext = createContext();

// Language translations
const translations = {
  english: {
    navHome: "Home",
    navAbout: "About",
    navContact: "Contact",
    title: "FinanceHelper",
    mainHeading: "Your Personal Finance Guide",
    mainSubheading: "Empowering you with financial knowledge and resources",
    getStarted: "Get Started",
    faqsTitle: "FAQs",
    faqsDesc: "Learn how to open a bank account and more",
    schemesTitle: "Government Schemes",
    schemesDesc: "Explore various government financial programs",
    loansTitle: "Loan Information",
    loansDesc: "Find loans for education, business, and more",
    womenTitle: "Women's Section",
    womenDesc: "Discover schemes and benefits for women",
    newsTitle: "Latest News",
    newsDesc: "Stay updated with financial news and trends",
    latestNews: "Latest Financial News",
    footer: "All rights reserved.",
  },
  hindi: {
    navHome: "‡§π‡•ã‡§Æ",
    navAbout: "‡§π‡§Æ‡§æ‡§∞‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç",
    navContact: "‡§∏‡§Ç‡§™‡§∞‡•ç‡§ï ‡§ï‡§∞‡•á‡§Ç",
    title: "‡§´‡§æ‡§á‡§®‡•á‡§Ç‡§∏ ‡§π‡•á‡§≤‡•ç‡§™‡§∞",
    mainHeading: "‡§Ü‡§™‡§ï‡§æ ‡§µ‡•ç‡§Ø‡§ï‡•ç‡§§‡§ø‡§ó‡§§ ‡§µ‡§ø‡§§‡•ç‡§§ ‡§Æ‡§æ‡§∞‡•ç‡§ó‡§¶‡§∞‡•ç‡§∂‡§ï",
    mainSubheading: "‡§µ‡§ø‡§§‡•ç‡§§‡•Ä‡§Ø ‡§ú‡•ç‡§û‡§æ‡§® ‡§î‡§∞ ‡§∏‡§Ç‡§∏‡§æ‡§ß‡§®‡•ã‡§Ç ‡§ï‡•á ‡§∏‡§æ‡§• ‡§Ü‡§™‡§ï‡•ã ‡§∏‡§∂‡§ï‡•ç‡§§ ‡§¨‡§®‡§æ‡§®‡§æ",
    getStarted: "‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡•á‡§Ç",
    faqsTitle: "‡§∏‡§æ‡§Æ‡§æ‡§®‡•ç‡§Ø ‡§™‡•ç‡§∞‡§∂‡•ç‡§®",
    faqsDesc: "‡§¨‡•à‡§Ç‡§ï ‡§ñ‡§æ‡§§‡§æ ‡§ï‡•à‡§∏‡•á ‡§ñ‡•ã‡§≤‡•á‡§Ç ‡§î‡§∞ ‡§Ö‡§ß‡§ø‡§ï ‡§ú‡§æ‡§®‡•á‡§Ç",
    schemesTitle: "‡§∏‡§∞‡§ï‡§æ‡§∞‡•Ä ‡§Ø‡•ã‡§ú‡§®‡§æ‡§è‡§Ç",
    schemesDesc: "‡§µ‡§ø‡§≠‡§ø‡§®‡•ç‡§® ‡§∏‡§∞‡§ï‡§æ‡§∞‡•Ä ‡§µ‡§ø‡§§‡•ç‡§§‡•Ä‡§Ø ‡§ï‡§æ‡§∞‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ‡•ã‡§Ç ‡§ï‡§æ ‡§™‡§§‡§æ ‡§≤‡§ó‡§æ‡§è‡§Ç",
    loansTitle: "‡§ã‡§£ ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä",
    loansDesc: "‡§∂‡§ø‡§ï‡•ç‡§∑‡§æ, ‡§µ‡•ç‡§Ø‡§µ‡§∏‡§æ‡§Ø ‡§î‡§∞ ‡§Ö‡§ß‡§ø‡§ï ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ã‡§£ ‡§ñ‡•ã‡§ú‡•á‡§Ç",
    womenTitle: "‡§Æ‡§π‡§ø‡§≤‡§æ ‡§µ‡§ø‡§≠‡§æ‡§ó",
    womenDesc: "‡§Æ‡§π‡§ø‡§≤‡§æ‡§ì‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Ø‡•ã‡§ú‡§®‡§æ‡§è‡§Ç ‡§î‡§∞ ‡§≤‡§æ‡§≠ ‡§ú‡§æ‡§®‡•á‡§Ç",
    newsTitle: "‡§§‡§æ‡§ú‡§º‡§æ ‡§ñ‡§¨‡§∞",
    newsDesc: "‡§µ‡§ø‡§§‡•ç‡§§‡•Ä‡§Ø ‡§∏‡§Æ‡§æ‡§ö‡§æ‡§∞ ‡§î‡§∞ ‡§∞‡•Å‡§ù‡§æ‡§®‡•ã‡§Ç ‡§∏‡•á ‡§Ö‡§™‡§°‡•á‡§ü ‡§∞‡§π‡•á‡§Ç",
    latestNews: "‡§®‡§µ‡•Ä‡§®‡§§‡§Æ ‡§µ‡§ø‡§§‡•ç‡§§‡•Ä‡§Ø ‡§∏‡§Æ‡§æ‡§ö‡§æ‡§∞",
    footer: "‡§∏‡§∞‡•ç‡§µ‡§æ‡§ß‡§ø‡§ï‡§æ‡§∞ ‡§∏‡•Å‡§∞‡§ï‡•ç‡§∑‡§ø‡§§‡•§",
  },
  marathi: {
    navHome: "‡§Æ‡•Å‡§ñ‡•ç‡§Ø‡§™‡•É‡§∑‡•ç‡§†",
    navAbout: "‡§Ü‡§Æ‡§ö‡•ç‡§Ø‡§æ‡§¨‡§¶‡•ç‡§¶‡§≤",
    navContact: "‡§∏‡§Ç‡§™‡§∞‡•ç‡§ï",
    title: "‡§´‡§æ‡§Ø‡§®‡§æ‡§®‡•ç‡§∏ ‡§π‡•á‡§≤‡•ç‡§™‡§∞",
    mainHeading: "‡§§‡•Å‡§Æ‡§ö‡§æ ‡§µ‡•à‡§Ø‡§ï‡•ç‡§§‡§ø‡§ï ‡§µ‡§ø‡§§‡•ç‡§§ ‡§Æ‡§æ‡§∞‡•ç‡§ó‡§¶‡§∞‡•ç‡§∂‡§ï",
    mainSubheading: "‡§Ü‡§∞‡•ç‡§•‡§ø‡§ï ‡§ú‡•ç‡§û‡§æ‡§® ‡§Ü‡§£‡§ø ‡§∏‡§Ç‡§∏‡§æ‡§ß‡§®‡§æ‡§Ç‡§∏‡§π ‡§§‡•Å‡§Æ‡•ç‡§π‡§æ‡§≤‡§æ ‡§∏‡§ï‡•ç‡§∑‡§Æ ‡§ï‡§∞‡§£‡•á",
    getStarted: "‡§∏‡•Å‡§∞‡•Ç ‡§ï‡§∞‡§æ",
    faqsTitle: "‡§∏‡§æ‡§Æ‡§æ‡§®‡•ç‡§Ø ‡§™‡•ç‡§∞‡§∂‡•ç‡§®",
    faqsDesc: "‡§¨‡§Å‡§ï ‡§ñ‡§æ‡§§‡•á ‡§ï‡§∏‡•á ‡§â‡§ò‡§°‡§æ‡§µ‡•á ‡§Ü‡§£‡§ø ‡§Ö‡§ß‡§ø‡§ï ‡§∂‡§ø‡§ï‡§æ",
    schemesTitle: "‡§∏‡§∞‡§ï‡§æ‡§∞‡•Ä ‡§Ø‡•ã‡§ú‡§®‡§æ",
    schemesDesc: "‡§µ‡§ø‡§µ‡§ø‡§ß ‡§∏‡§∞‡§ï‡§æ‡§∞‡•Ä ‡§Ü‡§∞‡•ç‡§•‡§ø‡§ï ‡§ï‡§æ‡§∞‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§∂‡•ã‡§ß‡§æ",
    loansTitle: "‡§ï‡§∞‡•ç‡§ú ‡§Æ‡§æ‡§π‡§ø‡§§‡•Ä",
    loansDesc: "‡§∂‡§ø‡§ï‡•ç‡§∑‡§£, ‡§µ‡•ç‡§Ø‡§µ‡§∏‡§æ‡§Ø ‡§Ü‡§£‡§ø ‡§Ö‡§ß‡§ø‡§ï ‡§ï‡§∞‡•ç‡§ú‡•á ‡§∂‡•ã‡§ß‡§æ",
    womenTitle: "‡§Æ‡§π‡§ø‡§≤‡§æ ‡§µ‡§ø‡§≠‡§æ‡§ó",
    womenDesc: "‡§Æ‡§π‡§ø‡§≤‡§æ‡§Ç‡§∏‡§æ‡§†‡•Ä ‡§Ø‡•ã‡§ú‡§®‡§æ ‡§Ü‡§£‡§ø ‡§´‡§æ‡§Ø‡§¶‡•á ‡§∂‡•ã‡§ß‡§æ",
    newsTitle: "‡§§‡§æ‡§ú‡•ç‡§Ø‡§æ ‡§¨‡§æ‡§§‡§Æ‡•ç‡§Ø‡§æ",
    newsDesc: "‡§Ü‡§∞‡•ç‡§•‡§ø‡§ï ‡§¨‡§æ‡§§‡§Æ‡•ç‡§Ø‡§æ ‡§Ü‡§£‡§ø ‡§ü‡•ç‡§∞‡•á‡§Ç‡§°‡•ç‡§∏‡§∂‡•Ä ‡§Ö‡§™‡§°‡•á‡§ü ‡§∞‡§π‡§æ",
    latestNews: "‡§®‡§µ‡•Ä‡§®‡§§‡§Æ ‡§Ü‡§∞‡•ç‡§•‡§ø‡§ï ‡§¨‡§æ‡§§‡§Æ‡•ç‡§Ø‡§æ",
    footer: "‡§∏‡§∞‡•ç‡§µ ‡§π‡§ï‡•ç‡§ï ‡§∞‡§æ‡§ñ‡•Ä‡§µ.",
  },
  bengali: {
    navHome: "‡¶π‡ßã‡¶Æ",
    navAbout: "‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶∏‡¶Æ‡ßç‡¶™‡¶∞‡ßç‡¶ï‡ßá",
    navContact: "‡¶Ø‡ßã‡¶ó‡¶æ‡¶Ø‡ßã‡¶ó",
    title: "‡¶´‡¶æ‡¶á‡¶®‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶∏ ‡¶π‡ßá‡¶≤‡ßç‡¶™‡¶æ‡¶∞",
    mainHeading: "‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶¨‡ßç‡¶Ø‡¶ï‡ßç‡¶§‡¶ø‡¶ó‡¶§ ‡¶Ö‡¶∞‡ßç‡¶• ‡¶ó‡¶æ‡¶á‡¶°",
    mainSubheading: "‡¶Ü‡¶∞‡ßç‡¶•‡¶ø‡¶ï ‡¶ú‡ßç‡¶û‡¶æ‡¶® ‡¶è‡¶¨‡¶Ç ‡¶∏‡¶Ç‡¶∏‡ßç‡¶•‡¶æ‡¶® ‡¶¶‡¶ø‡¶Ø‡¶º‡ßá ‡¶Ü‡¶™‡¶®‡¶æ‡¶ï‡ßá ‡¶ï‡ßç‡¶∑‡¶Æ‡¶§‡¶æ‡¶Ø‡¶º‡¶®",
    getStarted: "‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶ï‡¶∞‡ßÅ‡¶®",
    faqsTitle: "‡¶∏‡¶æ‡¶ß‡¶æ‡¶∞‡¶£ ‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶®",
    faqsDesc: "‡¶¨‡ßç‡¶Ø‡¶æ‡¶Ç‡¶ï ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü ‡¶ñ‡ßã‡¶≤‡¶æ‡¶∞ ‡¶™‡¶¶‡ßç‡¶ß‡¶§‡¶ø ‡¶è‡¶¨‡¶Ç ‡¶Ü‡¶∞‡¶ì ‡¶ú‡¶æ‡¶®‡ßÅ‡¶®",
    schemesTitle: "‡¶∏‡¶∞‡¶ï‡¶æ‡¶∞‡¶ø ‡¶™‡ßç‡¶∞‡¶ï‡¶≤‡ßç‡¶™",
    schemesDesc: "‡¶¨‡¶ø‡¶≠‡¶ø‡¶®‡ßç‡¶® ‡¶∏‡¶∞‡¶ï‡¶æ‡¶∞‡¶ø ‡¶Ü‡¶∞‡ßç‡¶•‡¶ø‡¶ï ‡¶™‡ßç‡¶∞‡ßã‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ ‡¶Ö‡¶®‡ßç‡¶¨‡ßá‡¶∑‡¶£ ‡¶ï‡¶∞‡ßÅ‡¶®",
    loansTitle: "‡¶ã‡¶£ ‡¶§‡¶•‡ßç‡¶Ø",
    loansDesc: "‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ, ‡¶¨‡ßç‡¶Ø‡¶¨‡¶∏‡¶æ ‡¶è‡¶¨‡¶Ç ‡¶Ü‡¶∞‡¶ì ‡¶Ö‡¶®‡ßá‡¶ï ‡¶ï‡¶ø‡¶õ‡ßÅ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶ã‡¶£ ‡¶ñ‡ßÅ‡¶Å‡¶ú‡ßÅ‡¶®",
    womenTitle: "‡¶Æ‡¶π‡¶ø‡¶≤‡¶æ ‡¶¨‡¶ø‡¶≠‡¶æ‡¶ó",
    womenDesc: "‡¶Æ‡¶π‡¶ø‡¶≤‡¶æ‡¶¶‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶™‡ßç‡¶∞‡¶ï‡¶≤‡ßç‡¶™ ‡¶è‡¶¨‡¶Ç ‡¶∏‡ßÅ‡¶¨‡¶ø‡¶ß‡¶æ ‡¶Ü‡¶¨‡¶ø‡¶∑‡ßç‡¶ï‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßÅ‡¶®",
    newsTitle: "‡¶∏‡¶∞‡ßç‡¶¨‡¶∂‡ßá‡¶∑ ‡¶ñ‡¶¨‡¶∞",
    newsDesc: "‡¶Ü‡¶∞‡ßç‡¶•‡¶ø‡¶ï ‡¶ñ‡¶¨‡¶∞ ‡¶è‡¶¨‡¶Ç ‡¶™‡ßç‡¶∞‡¶¨‡¶£‡¶§‡¶æ ‡¶∏‡¶Æ‡ßç‡¶™‡¶∞‡ßç‡¶ï‡ßá ‡¶Ü‡¶™‡¶°‡ßá‡¶ü ‡¶•‡¶æ‡¶ï‡ßÅ‡¶®",
    latestNews: "‡¶∏‡¶∞‡ßç‡¶¨‡¶∂‡ßá‡¶∑ ‡¶Ü‡¶∞‡ßç‡¶•‡¶ø‡¶ï ‡¶ñ‡¶¨‡¶∞",
    footer: "‡¶∏‡¶∞‡ßç‡¶¨‡¶∏‡ßç‡¶¨‡¶§‡ßç‡¶¨ ‡¶∏‡¶Ç‡¶∞‡¶ï‡ßç‡¶∑‡¶ø‡¶§‡•§",
  }
};

// Language Provider Component
export function LanguageProvider({ children }) {
  const [language, setLanguage] = useState('english');
  return (
    <LanguageContext.Provider value={{ language, setLanguage, translations }}>
      {children}
    </LanguageContext.Provider>
  );
}

// Custom hook to use language context
function useLanguage() {
  return useContext(LanguageContext);
}

export default function HomePage() {
  const [isOpen, setIsOpen] = useState(false);
  const [newsIndex, setNewsIndex] = useState(0);
  const navigate = useNavigate();
  const { language, setLanguage, translations } = useLanguage();
  const t = translations[language];

  const news = [
    "New government scheme announced for small businesses",
    "Interest rates expected to rise next month",
    "Stock market reaches all-time high",
    "New tax benefits for first-time homeowners"
  ];

  useEffect(() => {
    const interval = setInterval(() => {
      setNewsIndex((prevIndex) => (prevIndex + 1) % news.length);
    }, 5000);
    return () => clearInterval(interval);
  }, []);

  return (
    <div className="min-h-screen bg-gradient-to-b from-blue-100 to-white relative">
      
      <header className="bg-gradient-to-r from-cyan-500 to-blue-500 text-white p-4">
        <div className="container mx-auto flex justify-between items-center">
          <h1 className="text-2xl font-bold">{t.title}</h1>
          <nav className="flex items-center space-x-4">
            <ul className="flex space-x-4">
              <li><a href="#" className="hover:underline">{t.navHome}</a></li>
              <li><a href="#" className="hover:underline">{t.navAbout}</a></li>
              <li><a href="#" className="hover:underline">{t.navContact}</a></li>
            </ul>
            
            {/* Language Selector Dropdown */}
            <div className="relative">
              <button 
                onClick={() => setIsOpen(!isOpen)}
                className="flex items-center space-x-1 bg-blue-700 px-3 py-2 rounded-lg hover:bg-blue-800 transition-colors"
              >
                <span>{language.charAt(0).toUpperCase() + language.slice(1)}</span>
                <ChevronDown size={16} />
              </button>
              
              {isOpen && (
                <div className="absolute right-0 mt-2 w-48 bg-white rounded-lg shadow-lg py-1 text-gray-700">
                  {Object.keys(translations).map((lang) => (
                    <button
                      key={lang}
                      onClick={() => {
                        setLanguage(lang);
                        setIsOpen(false);
                      }}
                      className="block w-full text-left px-4 py-2 hover:bg-gray-100"
                    >
                      {lang.charAt(0).toUpperCase() + lang.slice(1)}
                    </button>
                  ))}
                </div>
              )}
            </div>
          </nav>
        </div>
      </header>

      <main className="container mx-auto px-4 py-8">
        <section className="text-center mb-12">
          <h2 className="text-4xl font-bold mb-4">{t.mainHeading}</h2>
          <p className="text-xl text-gray-600 mb-8">{t.mainSubheading}</p>
          <button 
            className="bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-colors"
            onClick={() => navigate("/chat")}
          >
            {t.getStarted}
          </button>
        </section>

        <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6 mb-12">
          <FeatureCard
            icon="üìö"
            title={t.faqsTitle}
            description={t.faqsDesc}
            onClick={() => navigate("/faqs")}
          />
          <FeatureCard
            icon="üèõÔ∏è"
            title={t.schemesTitle}
            description={t.schemesDesc}
            onClick={() => navigate("/schemes")}
          />
          <FeatureCard
            icon="üéì"
            title={t.loansTitle}
            description={t.loansDesc}
            onClick={() => navigate("/loans")}
          />
          <FeatureCard
            icon="üë©‚Äçüíº"
            title={t.womenTitle}
            description={t.womenDesc}
            onClick={() => navigate("/women")}
          />
          <FeatureCard
            icon="üì∞"
            title={t.newsTitle}
            description={t.newsDesc}
          />
        </div>

        <section>
          <h3 className="text-2xl font-bold mb-4">{t.latestNews}</h3>
          <p className="text-lg text-gray-700">{news[newsIndex]}</p>
        </section>
      </main>
    </div>
  );
}

// FeatureCard Component with Click Hover Effect
function FeatureCard({ icon, title, description, onClick }) {
  return (
    <div
      className="bg-white p-6 rounded-lg shadow-md cursor-pointer transition-transform duration-300 transform hover:scale-105 hover:shadow-lg"
      onClick={onClick}
    >
      <div className="flex items-center gap-2 mb-4">
        <span className="text-3xl">{icon}</span>
        <h3 className="text-xl font-semibold">{title}</h3>
      </div>
      <p className="text-gray-600">{description}</p>
    </div>
  );
}